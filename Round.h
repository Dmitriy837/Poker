#ifndef __ROUND
#define __ROUND
#include <iostream>
#include <string.h>
//Количество игроков
#define COUNT_PLAYERS 4
//Минимальная ставка с игрока
#define START_STAKES 100
using namespace std;
enum COMBO{NONE, PAIR, TWO_PAIRS, THREE_OF_A_KIND, STRAIGHT, FLUSH, FULL_HOUSE, FOUR_OF_A_KIND, STRAIGHT_FLUSH};

#include "Player.h"
#include "Human_player.h"
struct res_combo{
	COMBO _combo;
	int highest_nominal;
};
	
class Round{
	int count_players;
		//количество игроков
	Player** _players;
		//указатель на массив игроков
		res_combo* res;
		//какие игроки собрали комбинации
		//и каков старший номинал карты из 
		//комбинации на случай ничьи
	int in_game;
		//сколько игроков еще не спасовали
	bool* player_in_game;
		//не спасовал ли конкретный игрок
	int start_player;
		//с кого начинаем ходить по кругу
	int stakes;
		//текущая ставка
	int* balances;
	int* cards;
public:
	Round(int count, Player** __players);
//**************************************************************************************************
//Ищем победителей, отдаем им, то, что они заслужили:
//**************************************************************************************************
	void finish();
//**************************************************************************************************
//Все готовы, игра началась...
//**************************************************************************************************
	void begin(Deck& MyDeck);
//**************************************************************************************************
//Сбор результатов по игроку:
//**************************************************************************************************
	res_combo fill_res_combo(Player*& pl);
//**************************************************************************************************
//Хотим ли повышать ставку, если да, то насколько:
//**************************************************************************************************
	int init_up_stakes(int i);
//**************************************************************************************************
//Если кто-то до нас повысил ставку, решаем, поддержать или пасовать:
//**************************************************************************************************
	void agree_up_stakes(int i);
};
//**************************************************************************************************
#endif